#include <iostream>
#include <string>

using namespace std;

// Struktura gracza
struct Node {
    int ID;
    string nick;
    int level;
    char gender;
    Node* next;
};

// Funkcja dodajaca nowego gracza na koniec kolejki
void add(Node** front, Node** rear, int ID, const string& nick, int level, char gender) {
    Node* newNode = new Node{ ID, nick, level, gender, nullptr };
    if (*rear == nullptr) { // Jesli kolejka jest pusta
        *front = *rear = newNode; // Ustawienie zarÃ³wno poczatku, jak i konca na nowy wezlow
    }
    else {
        (*rear)->next = newNode; // Dolaczenie nowego wezla na koncu kolejki
        *rear = newNode;
    }
    cout << "Dodano gracza: " << nick << endl;
}

// Funkcja usuwajaca gracza z poczatku kolejki
void deletePlayer(Node** front, Node** rear) {
    if (*front == nullptr) { // Sprawdzenie, czy kolejka jest pusta
        cout << "Kolejka jest pusta!" << endl;
        return;
    }

    Node* temp = *front; // Tymczasowe przechowanie wskaznika na pierwszy element
    *front = (*front)->next; // Przesuniecie wskaznika poczatku na kolejny element

    if (*front == nullptr) { // Jesli po usunieciu kolejka jest pusta
        *rear = nullptr;
    }

    cout << "Usunieto gracza: " << temp->nick << endl;
    delete temp;
}

// Funkcja wyswietlajaca wszystkich graczy w kolejce
void displayQueue(Node* front) {
    if (front == nullptr) { // Sprawdzenie, czy kolejka jest pusta
        cout << "Kolejka jest pusta!" << endl;
        return;
    }

    Node* temp = front; // Tymczasowy wskaznik do przechodzenia przez kolejke
    while (temp != nullptr) { // Iteracja przez kolejne elementy
        cout << "ID: " << temp->ID << ", Nick: " << temp->nick
            << ", Poziom: " << temp->level << ", Plec: " << temp->gender << endl;
        temp = temp->next; // Przejscie do nastepnego elementu
    }
}

// Funkcja obslugujaca menu programu
void menu() {
    Node* front = nullptr; // Inicjalizacja wskaznika na poczatek kolejki
    Node* rear = nullptr; // Inicjalizacja wskaznika na koniec kolejki
    int choice;
    do {
        cout << "\n - - - Menu - - - \n"; // Wyswietlenie menu
        cout << "1. Dodaj gracza (add)\n";
        cout << "2. Usun gracza (delete)\n";
        cout << "3. Wyswietl kolejke\n";
        cout << "4. Wyjdz\n";
        cout << "Wybor: ";
        cin >> choice;

        switch (choice) {
        case 1: {
            int ID, level;
            char gender;
            string nick;

            cout << "Podaj ID: ";
            cin >> ID;
            cout << "Podaj nick (bez spacji, uzyj '-' zamiast spacji): ";
            cin >> nick;
            cout << "Podaj poziom: ";
            cin >> level;
            cout << "Podaj plec (m/k): ";
            cin >> gender;

            add(&front, &rear, ID, nick, level, gender);
            break;
        }
        case 2:
            deletePlayer(&front, &rear);
            break;
        case 3:
            displayQueue(front);
            break;
        case 4:
            cout << "Koniec programu." << endl;
            break;
        default:
            cout << "Nieprawidlowy wybor!" << endl;
        }
    } while (choice != 4);
}

// Funkcja glowna programu
int main() {
    menu();
    return 0;
}
